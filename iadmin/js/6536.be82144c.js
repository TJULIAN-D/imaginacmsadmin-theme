"use strict";(globalThis["webpackChunkadmin_quasar"]=globalThis["webpackChunkadmin_quasar"]||[]).push([[6536],{26536:(e,t,a)=>{function r(e,t,a,r,l,s){return null}a.r(t),a.d(t,{default:()=>c});var l=a(86284),s=a(36852),i=a(30152);const n={async beforeCreate(){await(0,i.c)().setIsPassenger(!0),await(0,s["default"])().getCustomerWithContract()},data(){return{crudId:this.$uid()}},computed:{companies(){const e=this.$getSetting("ramp::passengerCompanies")||[];return e.length>0?e:l.mI},crudInfo(){return this.$store.state.qcrudComponent.component[this.crudId]||{}},crudData(){return{crudId:this.crudId,apiRoute:"apiRoutes.qsetupagione.passengerCarrierStations",read:{columns:[{name:"id",label:this.$tr("isite.cms.form.id"),field:"id",style:"width: 50px"},{name:"StationName",label:"Station Name",field:"station",format:e=>e?e.stationName:"",align:"left"},{name:"airlineName",label:"Airline Name",field:"airline",format:e=>e?e.airlineName:"",align:"left"},{name:"codeShares",label:"Code Shares",field:"airline",formatAsync:async e=>{const t=await(0,s["default"])().getAirlinesList().find((t=>t.id==e.codeShares));return t?t.airlineName:"-"},align:"left"},{name:"Customers",label:"Customers",field:"customer",format:e=>e?e.customerName:"-",align:"left"},{name:"Contract",label:"Contracts",field:"contract",format:e=>e?e.contractName:"-",align:"left"},{name:"status",label:this.$tr("isite.cms.form.status"),field:"status",align:"left"},{name:"actions",label:this.$tr("isite.cms.form.actions"),align:"left"}],requestParams:{include:"station,airline,contract,customer"},filters:{status:{value:null,type:"select",props:{label:`${this.$tr("isite.cms.form.status")}:`,clearable:!0,options:[{label:this.$tr("isite.cms.label.enabled"),value:!0},{label:this.$tr("isite.cms.label.disabled"),value:!1}]}},stationId:{value:null,type:"crud",props:{crudType:"select",crudData:a.e(5744).then(a.bind(a,95744)),crudProps:{label:"Station Name",clearable:!0},config:{options:{label:"fullName",value:"id"},requestParams:{filter:{companyId:this.companies}}}}}}},create:{title:"Create Passenger Carrier Station"},update:{title:"Update Passenger Carrier Station",mapData:e=>(e.customerContract=this.findCustomerContracts(e),e)},delete:!0,formLeft:{id:{value:null},customerId:{value:null},contractId:{value:null},customerContract:{value:null,type:"select",props:{label:"Customer/Contract",clearable:!0,options:(0,s["default"])().getCustomerWithContractLists(),emitValue:!1}},stationId:{value:null,type:"crud",props:{crudType:"select",crudData:a.e(5744).then(a.bind(a,95744)),crudProps:{label:"Station Name"},config:{options:{label:"fullName",value:"id"},requestParams:{filter:{companyId:this.companies}}}}},airlineId:{value:null,type:"crud",props:{crudType:"select",crudData:Promise.all([a.e(1640),a.e(2704)]).then(a.bind(a,52704)),crudProps:{label:"Airline"},config:{options:{label:"airlineName",value:"id"}}}},codeShares:{value:null,type:"crud",props:{crudType:"select",crudData:Promise.all([a.e(1640),a.e(2704)]).then(a.bind(a,52704)),crudProps:{label:"Code Shares"},config:{options:{label:"airlineName",value:"id"}}}},separationHours:{value:null,type:"input",props:{label:"Flight Schedule Inbound/Outbound separation by Hours",type:"number",step:"0.1"}},status:{value:!0,type:"select",props:{label:`${this.$tr("isite.cms.form.status")}:`,options:[{label:this.$tr("isite.cms.label.enabled"),value:!0},{label:this.$tr("isite.cms.label.disabled"),value:!1}]}}},getDataForm:(e,t)=>new Promise((t=>{const a=(0,s["default"])().getCustomerWithContractLists().find((t=>{if(e.customerContract)return t.value===e.customerContract.value}));a&&(e.contractId=a.contractId,e.customerId=a.id,delete e.customerContract),t(e)}))}}},methods:{findCustomerContracts(e){const t=(0,s["default"])().getCustomerWithContractLists().find((t=>e.customerId&&e.contractId?t.id==e.customerId&&t.contractId==e.contractId:e.customerId&&!e.contractId?t.id==e.customerId&&null==t.contractId:void 0));return t||null}}};var o=a(68716);const u=(0,o.c)(n,[["render",r]]),c=u}}]);