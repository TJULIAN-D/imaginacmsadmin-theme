"use strict";(globalThis["webpackChunkadmin_quasar"]=globalThis["webpackChunkadmin_quasar"]||[]).push([[9260],{71640:(t,e,a)=>{a.r(e),a.d(e,{default:()=>h});var i=a(92444);function r(t,e,r,s,l,o){const n=(0,i.E1)("form-orders"),d=(0,i.E1)("flightDetail"),u=(0,i.E1)("inner-loading"),c=(0,i.E1)("crud");return(0,i.Wz)(),(0,i.An)("div",null,[(0,i.K2)(n,{ref:"formOrders",onRefreshData:e[0]||(e[0]=t=>o.getDataTable(!0))},null,512),(0,i.K2)(d),(0,i.K2)(u,{visible:l.loadingBulk},null,8,["visible"]),(0,i.K2)(c,{"crud-data":a.e(7400).then(a.bind(a,17400)),"custom-data":o.crudData,ref:"crudComponent",title:t.$route.meta.title},null,8,["crud-data","custom-data","title"])])}var s=a(6012),l=a(86284),o=a(30152),n=a(96332),d=a(36852),u=a(8932),c=a(18528)["c"];const m={name:"RampCrud",emits:["loading"],components:{formOrders:s.c,flightDetail:n.c},data(){return{crudId:this.$uid(),areaId:null,loadingBulk:!1}},provide(){return{showWorkOrder:this.showWorkOrder,openModal:!0}},watch:{"$filter.values":{deep:!0,handler:function(t,e){JSON.stringify(t)!==JSON.stringify(e)&&(this.areaId=this.$filter.values.areaId)}},isAppOffline:{deep:!0,handler:async function(t){t||await(0,d["default"])().getWorkOrders(!0)}}},async created(){this.$nextTick((async()=>{await(0,o.c)().setIsPassenger(!0),await(0,o.c)().setIsFueling(!1),await(0,d["default"])().getAllList(),await(0,d["default"])().getCustomerWithContract()}))},beforeUnmount(){(0,o.c)().setFlightList([]),(0,o.c)().setFlightId(null)},computed:{isAppOffline(){return this.$store.state.qofflineMaster.isAppOffline},filter(){return console.log(this.$filter),this.$filter},editPermissionseSubmitted(){return(0,o.c)().editPermissionseSubmitted()},validateStatus(){return t=>t==l._G||t==l.g1||t==l.lC||t==l.kz||t==l._y&&this.editPermissionseSubmitted},crudData(){return{crudId:this.crudId,entityName:c("main.qramp.entityNames.workOrders"),apiRoute:"apiRoutes.qramp.workOrders",permission:"ramp.passenger-work-orders",create:{method:async()=>{await(0,o.c)().setTitleOffline(this.$tr("ifly.cms.form.newWorkOrder")),await(0,o.c)().setIsPassenger(!0),await(0,o.c)().setTypeWorkOrder(l.Qt),this.$refs.formOrders.loadform({modalProps:{title:this.$tr("ifly.cms.form.newWorkOrder"),update:!1,width:"35vw"}})}},read:{columns:[{name:"id",label:this.$tr("isite.cms.form.id"),field:"id",style:"width: 50px",action:t=>!1},{name:"customer",label:this.$tr("isite.cms.label.customer"),field:t=>t.customCustomerName||t.customer,formatAsync:async t=>{const e=await(0,d["default"])().getCustomerList().find((e=>e.id===t.customerId))||{};return`${e.customerName||"-"}`},align:"left"},{name:"contract",label:"Contracts",field:"contract",format:t=>t?t.contractName:"-",align:"left"},{name:"operationType",label:"Operation Type",field:"operationTypeId",formatAsync:async t=>{const e=await(0,d["default"])().getOperationTypeList().find((e=>e.id===t.operationTypeId))||{};return`${e.operationName||"-"}`},align:"left"},{name:"flightStatus",label:"Flight Status",field:"flightStatus",align:"left",formatColumn:t=>{const e=(0,d["default"])().getFlightStatusesList().find((e=>e.id===t.flightStatusId))||{};return{bgTextColor:e&&e.color?`tw-bg-${e.color}`:""}},formatAsync:async t=>{const e=await(0,d["default"])().getFlightStatusesList().find((e=>e.id===t.flightStatusId))||{};return`${e.name||"-"}`}},{name:"inboundFlightNumber",label:"Inbound Flight Number",field:t=>`${t.inboundFlightNumber?t.inboundFlightNumber:""}${t.faFlightId?"":"(Manually)"}`,align:"left",format:t=>t?`<span class="tw-border tw-p-1 tw-rounded-md tw-font-medium"/>${t}</span>`:"",action:t=>{const e=t.faFlightId?t.faFlightId.split("-")[0]:null,a={workOrderId:t.id,faFlightId:t.faFlightId,flightNumber:e||t.inboundFlightNumber,boundScheduleDate:t.inboundScheduleArrival||this.$moment().format("YYYY-MM-DDTHH:mm:ss"),type:"inbound"};this.getFlightMap(a)}},{name:"inboundScheduledArrival",label:"Arrival",field:"inboundScheduledArrival",align:"left",format:t=>t?this.$trdT(t):"-",sortable:!0},{name:"outboundFlightNumber",label:"Outbound Flight Number",field:t=>`${t.inboundFlightNumber?t.inboundFlightNumber:""}${t.faFlightId?"":"(Manually)"}`,align:"left",format:t=>t?`<span class="tw-border tw-p-1 tw-rounded-md tw-font-medium"/>${t}</span>`:"",action:t=>{const e=t.outboundFaFlightId?t.outboundFaFlightId.split("-")[0]:null,a={workOrderId:t.id,faFlightId:t.outboundFaFlightId,flightNumber:e||t.outboundFlightNumber,boundScheduleDate:t.outboundScheduledDeparture||this.$moment().format("YYYY-MM-DDTHH:mm:ss"),type:"outbound"};this.getFlightMap(a)}},{name:"outboundScheduledDeparture",label:"Departure",field:"outboundScheduledDeparture",align:"left",format:t=>t?this.$trdT(t):"-",sortable:!0},{name:"adHoc",label:"Ad Hoc",field:"adHoc",format:t=>t?"Yes":"No",align:"left"},{name:"statusName",label:this.$tr("isite.cms.form.status"),field:"workOrderStatus",formatAsync:async t=>{const e=await(0,d["default"])().getWorkOrderStatusesList().find((e=>e.id===t.statusId))||{},a=e?e.statusName+(t.needToBePosted?"(Posting)":""):"-";return`${a}`},align:"left"},{name:"station",label:"Station",field:"stationId",formatAsync:async t=>{if(!t.stationId)return"-";const e=await(0,d["default"])().getStationList().find((e=>e.id===t.stationId))||{};return`${e.fullName||"-"}`},align:"left"},{name:"responsible",label:"Responsible",field:"responsible",format:t=>t?t.fullName:"-",align:"left"},{name:"workdayInvoiceId",label:"Workday Invoice Id",field:"workdayInvoiceId",format:t=>t||"-",align:"left"},{name:"created_at",label:this.$tr("isite.cms.form.createdAt"),field:"createdAt",align:"left",format:t=>t?this.$trd(t):"-"},{name:"updated_at",label:this.$tr("isite.cms.form.updatedAt"),field:"updatedAt",align:"left",format:t=>t?this.$trd(t):"-"},{name:"actions",label:this.$tr("isite.cms.form.actions"),align:"left"}],filters:{date:{props:{label:"Scheduled date"},name:"scheduleDateLocal",field:{value:"schedule_date_local"},quickFilter:!0},customerId:{value:null,type:"select",quickFilter:!0,loadOptions:{apiRoute:"apiRoutes.qramp.setupCustomers",select:{label:"customerName",id:"id"},requestParams:{filter:{companyId:l.mI}}},props:{label:"Customer",clearable:!0}},contractId:{value:null,type:"select",quickFilter:!0,loadOptions:{apiRoute:"apiRoutes.qramp.setupContracts",select:{label:"contractName",id:"id"},requestParams:{filter:{contractStatusId:1,businessUnitId:l.GK}}},props:{label:"Contract",clearable:!0}},statusId:{value:null,type:"select",quickFilter:!0,loadOptions:{apiRoute:"apiRoutes.qramp.workOrderStatuses",select:{label:"statusName",id:"id"},requestParams:{filter:{companyId:l.mI}}},props:{label:"Status",clearable:!0}},stationId:{value:null,type:"select",loadOptions:{apiRoute:"apiRoutes.qsetupagione.setupStations",select:{label:"fullName",id:"id"},requestParams:{filter:{companyId:l.mI}}},props:{label:"Station",clearable:!0}},adHoc:{value:null,type:"select",quickFilter:!0,props:{label:"Ad Hoc",clearable:!0,options:[{label:this.$tr("isite.cms.label.yes"),value:!0},{label:this.$tr("isite.cms.label.no"),value:!1}]}},operationTypeId:{value:null,type:"select",props:{label:"Operation Type",clearable:!0,color:"primary"},loadOptions:{apiRoute:"apiRoutes.qramp.operationTypes",select:{label:"operationName",id:"id"},requestParams:{filter:{companyId:l.mI}}}},businessUnitId:{value:l.GK}},requestParams:{include:"responsible,contract,customer",filter:{withoutDefaultInclude:!0,businessUnitId:l.GK,type:[l.Qt,l.kl]}},actions:[{name:"edit-work",icon:"fal fa-pen",label:this.$tr("isite.cms.label.edit"),format:t=>({label:this.validateStatus(t.statusId)?this.$tr("isite.cms.label.edit"):this.$tr("isite.cms.label.show"),icon:this.validateStatus(t.statusId)?"fal fa-pen":"fal fa-eye"}),action:t=>{this.showWorkOrder(t)}},{name:"close",icon:"fal fa-check",label:this.$tr("isite.cms.label.closeFlight"),format:t=>({vIf:![l.lC,l._y,l.g1].includes(t.statusId)}),action:t=>{this.changeStatus(l.g1,t.id)}},{name:"submit",icon:"fal fa-check-double",label:this.$tr("isite.cms.label.submit"),format:t=>({vIf:this.$hasAccess("ramp.work-orders.submit")&&![l.lC,l._y].includes(t.statusId)}),action:t=>{this.changeStatus(l._y,t.id)}},{name:"post",icon:"fal fa-paper-plane",label:this.$tr("isite.cms.label.post"),action:t=>{this.changeStatus(l.lC,t.id)},format:t=>({vIf:this.$hasAccess("ramp.work-orders.post")&&!t.adHoc&&!t.needToBePosted&&![l.lC].includes(t.statusId),label:this.$tr("isite.cms.label.post")})},{name:"repost",icon:"fas fa-paper-plane",label:"Repost",action:t=>{this.changeStatus(l.lC,t.id)},format:t=>({vIf:this.$hasAccess("ramp.work-orders.re-post")&&!t.adHoc&&t.statusId==l.lC})},{name:"Reload Transactions",icon:"fa-light fa-download",label:"Reload Transactions",action:t=>{this.postReloadTransactions(t.id)},format:t=>({vIf:this.$hasAccess("ramp.work-orders.reload-transactions")&&!this.isAppOffline})}],bulkActions:[{apiRoute:"/ramp/v1/work-orders/bulk-post",permission:"ramp.work-orders.bulk-post",criteria:"id",props:{icon:"fas fa-paper-plane",label:"Post"}},{apiRoute:"/ramp/v1/work-orders/bulk-submit",permission:"ramp.work-orders.bulk-submit",criteria:"id",props:{icon:"fas fa-check",label:"Submit"}},{apiRoute:"/ramp/v1/work-orders/bulk-export-pdf",permission:"ramp.work-orders.bulk-export-pdf",criteria:"id",props:{icon:"fas fa-download",label:"Print Bulk(PDF)"}},{apiRoute:"/ramp/v1/work-orders/passenger-bulk-export-csv",permission:"ramp.work-orders.bulk-export-csv",criteria:"id",props:{icon:"fas fa-download",label:"Bulk(CSV)"}},{apiRoute:"/ramp/v1/work-orders/bulk-reload-transactions",permission:"ramp.work-orders.bulk-reload-transactions",criteria:"id",props:{icon:"fas fa-download",label:"Reload Transactions"}}],relation:{permission:"ramp.work-orders.see-workday-transactions",apiRoute:"apiRoutes.qramp.workOrderTransactions",requestParams:t=>({filter:{workOrderId:t.id},include:"product,contractLine"}),columns:[{name:"productId",label:"Sale Item Id",field:"product",format:t=>t?.externalId||"-"},{name:"productName",label:"Sale Item Name",field:"product",format:t=>t?.name||"-"},{name:"contractLineWorkdayId",label:"Contract LI Id",field:"contractLine",format:t=>t?.contractLineWorkdayId||"-"},{name:"invoiceLineMemo",label:"Invoice Line Memo",field:"contractLine",format:t=>t?.InvoiceLineMemo||"-"},{name:"quantity",label:"Quantity",field:"quantity"},{name:"rate",label:"Rate",field:"contractLine",format:t=>t?.rate||"-"},{label:"Total",field:t=>{const e=t.quantity||0,a=t.contractLine?.rate||0;return e*a}},{name:"transactionId",label:"Transaction Id",field:"transactionId"},{name:"postedAt",label:"Date Posted",field:"postedAt",format:t=>t?this.$trdT(t):"-"},{name:"amount",label:"ammount",field:"ammount"}]}},update:!1,delete:!0,formLeft:{}}},getCustomerName(){return t=>{let e=t;return t&&(e="object"===typeof t?t.customerName:t),e||"-"}},crudInfo(){return this.$store.state.qcrudComponent.component[this.crudId]||{}}},methods:{async postReloadTransactions(t){try{this.loadingBulk=!0,await this.$crud.update("apiRoutes.qramp.reloadTransactions",t,{}),await this.$root.$emit("crud.data.refresh"),this.loadingBulk=!1}catch(e){this.loadingBulk=!1}},getOfflineTitleStatus(t,e){const a={1:"DRAFT",2:"POSTED",3:"SUBMITTED",4:"CLOSED",5:"SCHEDULE"};return`Work Order ${a[t]} - ID ${e}`},async changeStatus(t,e){const a="apiRoutes.qramp.workOrderChangeStatus",i="apiRoutes.qramp.workOrders",r={id:e,statusId:t};let s={params:{titleOffline:this.getOfflineTitleStatus(t,e)||""}};this.$emit("loading",!0),r.offline=this.isAppOffline,await u.a4.updateRecord(i,r,r?.id);const l=this.$crud.update(a,e,r,s);l.catch((t=>{this.$emit("loading",!1),this.isAppOffline||this.$alert.error({message:`${this.$tr("isite.cms.message.recordNoUpdated")}`})})).finally((()=>{this.$emit("loading",!1),u.kN.emit("crud.data.refresh")}))},async openModal(t){const e=this.$tr("ifly.cms.form.updateWorkOrder")+(t.id?` Id: ${t.id}`:"");await(0,o.c)().setIsPassenger(!0),await this.$refs.formOrders.loadform({modalProps:{title:`${this.$tr("ifly.cms.form.updateWorkOrder")} Id: ${t.id}`,update:!0,workOrderId:t.id,width:"90vw"},data:t}),(0,o.c)().setTitleOffline(e)},showWorkOrder(t){this.isAppOffline?this.openModal(t):this.$crud.show("apiRoutes.qramp.workOrders",t.id,{refresh:!0,params:{include:"customer,workOrderStatus,operationType,station,contract,responsible"}}).then((async t=>{this.openModal(t.data)})).catch((t=>{console.log(t)}))},async getFlightMap(t){try{(0,o.c)().setWorkOrder(t),(0,o.c)().showVisibleMapModal()}catch(e){(0,o.c)().setWorkOrder(null),console.log(e)}},async getDataTable(t){await this.$refs.crudComponent.getDataTable(t)}}};var p=a(68716);const f=(0,p.c)(m,[["render",r]]),h=f}}]);